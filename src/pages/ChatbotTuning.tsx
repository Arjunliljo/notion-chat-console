
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import { Bot, Send, Save } from 'lucide-react';

export const ChatbotTuning = () => {
  const [systemPrompt, setSystemPrompt] = useState(`You are a helpful AI assistant for customer support. You should:

- Be polite and professional
- Provide accurate information
- Ask clarifying questions when needed
- Escalate to human agents when appropriate
- Keep responses concise but informative

Always maintain a friendly tone and be empathetic to customer concerns.`);

  const [testMessage, setTestMessage] = useState('');
  const [chatHistory, setChatHistory] = useState([
    {
      role: 'assistant',
      content: 'Hello! How can I help you today?'
    }
  ]);

  const handleTestMessage = () => {
    if (!testMessage.trim()) return;

    const newUserMessage = { role: 'user', content: testMessage };
    const mockResponse = { 
      role: 'assistant', 
      content: 'This is a mock response based on your system prompt. In a real implementation, this would be generated by your AI model.' 
    };

    setChatHistory(prev => [...prev, newUserMessage, mockResponse]);
    setTestMessage('');
  };

  const handleSavePrompt = () => {
    console.log('Saving system prompt:', systemPrompt);
    // In real implementation, this would save to API
  };

  return (
    <div className="space-y-6 animate-fade-in">
      <div>
        <h1 className="text-3xl font-bold font-poppins">Chatbot Fine-Tuning</h1>
        <p className="text-muted-foreground mt-2">
          Configure your AI assistant's behavior and test responses
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* System Prompt Editor */}
        <Card className="glass">
          <CardHeader>
            <CardTitle className="font-poppins flex items-center">
              <Bot className="w-5 h-5 mr-2" />
              System Prompt
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="system-prompt">
                Define your AI assistant's personality and behavior
              </Label>
              <Textarea
                id="system-prompt"
                value={systemPrompt}
                onChange={(e) => setSystemPrompt(e.target.value)}
                className="min-h-[300px] font-mono text-sm"
                placeholder="Enter your system prompt here..."
              />
            </div>
            
            <div className="flex justify-end">
              <Button onClick={handleSavePrompt} className="bg-foreground text-background">
                <Save className="w-4 h-4 mr-2" />
                Save Prompt
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Live Preview */}
        <Card className="glass">
          <CardHeader>
            <CardTitle className="font-poppins">Live Preview</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {/* Chat History */}
              <div className="border rounded-lg p-4 h-[300px] overflow-y-auto bg-muted/20">
                {chatHistory.map((message, index) => (
                  <div key={index} className={`mb-4 ${message.role === 'user' ? 'text-right' : 'text-left'}`}>
                    <div
                      className={`inline-block max-w-[80%] p-3 rounded-lg ${
                        message.role === 'user'
                          ? 'bg-foreground text-background'
                          : 'bg-muted text-foreground'
                      }`}
                    >
                      <p className="text-sm">{message.content}</p>
                    </div>
                  </div>
                ))}
              </div>

              {/* Test Input */}
              <div className="flex space-x-2">
                <Input
                  value={testMessage}
                  onChange={(e) => setTestMessage(e.target.value)}
                  placeholder="Type a test message..."
                  onKeyPress={(e) => e.key === 'Enter' && handleTestMessage()}
                  className="flex-1"
                />
                <Button onClick={handleTestMessage} size="sm">
                  <Send className="w-4 h-4" />
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Additional Configuration */}
      <Card className="glass">
        <CardHeader>
          <CardTitle className="font-poppins">Advanced Settings</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div>
              <Label htmlFor="temperature">Temperature</Label>
              <Input
                id="temperature"
                type="number"
                min="0"
                max="2"
                step="0.1"
                defaultValue="0.7"
                placeholder="0.7"
              />
              <p className="text-xs text-muted-foreground mt-1">
                Controls randomness (0-2)
              </p>
            </div>
            
            <div>
              <Label htmlFor="max-tokens">Max Tokens</Label>
              <Input
                id="max-tokens"
                type="number"
                min="1"
                max="4000"
                defaultValue="500"
                placeholder="500"
              />
              <p className="text-xs text-muted-foreground mt-1">
                Maximum response length
              </p>
            </div>
            
            <div>
              <Label htmlFor="model">Model Version</Label>
              <select className="w-full p-2 border border-border rounded-md bg-background">
                <option value="gpt-4">GPT-4</option>
                <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
                <option value="claude-3">Claude 3</option>
              </select>
              <p className="text-xs text-muted-foreground mt-1">
                AI model to use
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
